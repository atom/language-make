'fileTypes': [
  'Makefile'
  'makefile'
  'GNUmakefile'
  'OCamlMakefile'
  'mf'
  'mk'
  'Makefile.in'
]
'firstLineMatch': '^#!\\s*/.*\\bmake\\s+-f'
'name': 'Makefile'
'scopeName': 'source.makefile'
'patterns': [
  {
    'include': '#comment'
  }
  {
    'include': '#variableAssignment'
  }
  {
    'include': '#recipe'
  }
  {
    'include': '#directives'
  }
]
'repository':
  'comment':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=#)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.makefile'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '#'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.makefile'
            'end': '\\n'
            'name': 'comment.line.number-sign.makefile'
            'patterns': [
              {
                'match': '\\\\\\n'
                'name': 'constant.character.escape.continuation.makefile'
              }
            ]
          }
        ]
      }
    ]
  'directives':
    'patterns': [
      {
        'begin': '^[ ]*([s\\-]?include)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.include.makefile'
        'end': '^'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variables'
          }
          {
            'match': '%'
            'name': 'constant.other.placeholder.makefile'
          }
        ]
      }
      {
        'begin': '^[ ]*(vpath)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.vpath.makefile'
        'end': '^'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variables'
          }
          {
            'match': '%'
            'name': 'constant.other.placeholder.makefile'
          }
        ]
      }
      {
        'begin': '^(?:(override)\\s*)?(define)\\s*([^\\s]+)\\s*(=|\\?=|:=|\\+=)?(?=\\s)'
        'beginCaptures':
          '1':
            'name': 'keyword.control.override.makefile'
          '2':
            'name': 'keyword.control.define.makefile'
          '3':
            'name': 'variable.other.makefile'
          '4':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '^(endef)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G(?!\\n)'
            'end': '^'
            'patterns': [
              {
                'include': '#comment'
              }
            ]
          }
          {
            'include': '#variables'
          }
          {
            'include': '#comment'
          }
        ]
      }
      {
        'begin': '^[ ]*(export)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '^'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variableAssignment'
          }
          {
            'match': '[^\\s]+'
            'name': 'variable.other.makefile'
          }
        ]
      }
      {
        'begin': '^[ ]*(override|private)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '^'
        'patterns': [
          {
            'include': '#variableAssignment'
          }
        ]
      }
      {
        'begin': '^[ ]*(unexport|undefine)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '^'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'match': '[^\\s]+'
            'name': 'variable.other.makefile'
          }
        ]
      }
      {
        'begin': '^(ifdef|ifndef)\\s*([^\\s]+)(?=\\s)'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
          '2':
            'name': 'variable.other.makefile'
          '3':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '^(endif)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G(?!\\n)'
            'end': '^'
            'patterns': [
              {
                'include': '#comment'
              }
            ]
          }
          {
            'include': '$self'
          }
        ]
      }
      {
        'begin': '^(ifeq|ifneq)(?=\\s)'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '^(endif)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G'
            'end': '^'
            'name': 'meta.scope.condition.makefile'
            'patterns': [
              {
                'include': '#variables'
              }
              {
                'include': '#comment'
              }
            ]
          }
          {
            'begin': '^else(?=\\s)'
            'beginCaptures':
              '0':
                'name': 'keyword.control.else.makefile'
            'end': '^'
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  'interpolation':
    'patterns': [
      {
        'begin': '(?=`)'
        'end': '(?!\\G)'
        'name': 'meta.embedded.line.shell.makefile'
        'patterns': [
          {
            'begin': '`'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.makefile'
            'contentName': 'source.shell.makefile'
            'end': '(`)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.makefile'
              '1':
                'name': 'source.shell.makefile'
            'name': 'string.interpolated.backtick.makefile'
            'patterns': [
              {
                'include': 'source.shell'
              }
            ]
          }
        ]
      }
    ]
  'recipe':
    'patterns': [
      {
        'begin': '^(?!\\t)([^:]*)(:)(?!\\=)'
        'beginCaptures':
          '1':
            'patterns': [
              {
                'match': '^\\s*(\\\\.)((?:DE(?:FAULT|LETE_ON_ERROR)|EXPORT_ALL_VARIABLES|I(?:GNORE|NTERMEDIATE)|L(?:IBPATTERNS|O(?:ADED|W_RESOLUTION_TIME))|NOTPARALLEL|ONESHELL|P(?:HONY|OSIX|RECIOUS)|S(?:ECOND(?:ARY|EXPANSION)|HELLFLAGS|ILENT|UFFIXES)))\\s*$'
                'captures':
                  '1':
                    'name': 'punctuation.definition.target.special.makefile'
                  '2':
                    'name': 'support.function.target.$1.makefile'
              }
              {
                'begin': '(?=\\S)'
                'end': '(?=\\s|$)'
                'name': 'entity.name.function.target.makefile'
                'patterns': [
                  {
                    'include': '#variables'
                  }
                  {
                    'match': '%'
                    'name': 'constant.other.placeholder.makefile'
                  }
                ]
              }
            ]
          '2':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '^(?!\\t)'
        'name': 'meta.scope.target.makefile'
        'patterns': [
          {
            'begin': '\\G'
            'end': '^'
            'name': 'meta.scope.prerequisites.makefile'
            'patterns': [
              {
                'match': '\\\\\\n'
                'name': 'constant.character.escape.continuation.makefile'
              }
              {
                'match': '%|\\*'
                'name': 'constant.other.placeholder.makefile'
              }
              {
                'include': '#comment'
              }
              {
                'include': '#variables'
              }
            ]
          }
          {
            'begin': '^\\t'
            'end': '$'
            'name': 'meta.scope.recipe.makefile'
            'patterns': [
              {
                'match': '\\\\\\n'
                'name': 'constant.character.escape.continuation.makefile'
              }
              {
                'include': '#variables'
              }
              {
                'include': 'source.shell'
              }
            ]
          }
        ]
      }
    ]
  'variableAssignment':
    'patterns': [
      {
        'begin': '(^[ ]*|\\G\\s*)([^\\s]+)\\s*(=|\\?=|:=|\\+=)'
        'beginCaptures':
          '2':
            'name': 'variable.other.makefile'
          '3':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '\\n'
        'patterns': [
          {
            'match': '\\\\\\n'
            'name': 'constant.character.escape.continuation.makefile'
          }
          {
            'include': '#comment'
          }
          {
            'include': '#variables'
          }
          {
            'include': '#interpolation'
          }
        ]
      }
    ]
  'variables':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.makefile'
        'match': '(\\$?\\$)[@%<?^+*]'
        'name': 'variable.language.makefile'
      }
      {
        'match': '\\b@\\w+@\\b'
        'name': 'string.interpolated.makefile'
      }
      {
        'begin': '\\$?\\$\\('
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.variable.makefile'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.variable.makefile'
        'name': 'string.interpolated.makefile'
        'patterns': [
          {
            'include': 'source.shell#string'
          }
          {
            'include': '#variables'
          }
          {
            'match': '\\G((?:%(?:D|F)|\\*(?:D|F)|\\+(?:D|F)|<(?:D|F)|\\?(?:D|F)|@(?:D|F)|A(?:R(?:FLAGS)?|S(?:FLAGS)?)|C(?:C|FLAGS|O(?:FLAGS)?|PP(?:FLAGS)?|TANGLE|WEAVE|XX(?:FLAGS)?)|F(?:C|FLAGS)|G(?:ET|FLAGS)|L(?:D(?:FLAGS|LIBS)|EX|FLAGS|INT(?:FLAGS)?|OADLIBES)|M(?:2C|AKE(?:FILES|INFO|LEVEL)?)|P(?:C|FLAGS)|R(?:FLAGS|M)|T(?:ANGLE|EX(?:I2DVI)?)|WEAVE|Y(?:ACC|FLAGS)|\\^(?:D|F)|bindir|ex(?:ec_prefix|port)|libexecdir|prefix|sbindir|unexport))(?=\\s*\\))'
            'name': 'variable.language.makefile'
          }
          {
            'begin': '\\G((?:a(?:bspath|dd(?:prefix|suffix)|nd)|basename|call|dir|e(?:rror|val)|f(?:i(?:l(?:e|ter(?:\\-out)?)|ndstring|rstword)|lavor|oreach)|guile|i(?:f|nfo)|join|lastword|notdir|or(?:igin)?|patsubst|realpath|s(?:hell|ort|trip|u(?:bst|ffix))|value|w(?:arning|ildcard|ord(?:list|s)?)))\\s'
            'beginCaptures':
              '1':
                'name': 'support.function.$1.makefile'
            'end': '(?=\\))'
            'name': 'meta.scope.function-call.makefile'
            'patterns': [
              {
                'include': '#variables'
              }
              {
                'include': 'source.shell#string'
              }
              {
                'match': '%|\\*'
                'name': 'constant.other.placeholder.makefile'
              }
            ]
          }
          {
            'begin': '\\G(origin|flavor)\\s(?=[^\\s)]+\\s*\\))'
            'beginCaptures':
              '1':
                'name': 'support.function.$1.makefile'
            'contentName': 'variable.other.makefile'
            'end': '(?=\\))'
            'name': 'meta.scope.function-call.makefile'
            'patterns': [
              {
                'include': '#variables'
              }
              {
                'include': 'source.shell#string'
              }
            ]
          }
          {
            'begin': '\\G(?!\\))'
            'end': '(?=\\))'
            'name': 'variable.other.makefile'
            'patterns': [
              {
                'include': '#variables'
              }
              {
                'include': 'source.shell#string'
              }
            ]
          }
        ]
      }
    ]